server:
    port: 8090
spring:
    datasource:
        password: root
        url: jdbc:mysql://localhost:8889/file_manager?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC
        username: root
    jpa:
        hibernate:
            ddl-auto: create
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        show-sql: true
    security:
        oauth2:
            client:
                registration:
                    google:
                        clientId: 590774691184-8lm3of1ku7ji9c4va6nqfeehr414noub.apps.googleusercontent.com
                        clientSecret: bEd45zrulgWgbeyUWb5YFE43
                        redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
                        scope:
                            - email
                            - profile

                    github:
                        clientId: 03d24555336e21d085cb
                        clientSecret: b6772c591fc786ca5a1159686fb9d5eb31c2cddf
                        redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
                        scope:
                            - user:email
                            - read:user
app:
    auth:
     tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
     tokenExpirationMsec: 864000000
    oauth2:
     # After successfully authenticating with the OAuth2 Provider,
     # we'll be generating an auth token for the user and sending the token to the
     # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
     # We're not using cookies because they won't work well in mobile clients.
      authorizedRedirectUris:
       - http://localhost:8090/oauth2/redirect

